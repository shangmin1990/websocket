<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/javaee
                      http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0">
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath*:config/applicationContext.xml</param-value>
  </context-param>

  <context-param>
    <param-name>oauthLocation</param-name>
    <param-value>/config/oauth.properties</param-value>
  </context-param>
  <!--The todos configuration location-->
  <servlet>
    <servlet-name>todos</servlet-name>
    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
    <init-param>
      <param-name>contextConfigLocation</param-name>
      <param-value>classpath*:config/todos.xml</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
    <!--
    /**
    * The main entry point for processing HTTP requests from SockJS clients.
    *
    * <p>In a Servlet 3+ container, {@link org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler}
    * can be used to invoke this service. The processing servlet, as well as all filters involved,
    * must have asynchronous support enabled through the ServletContext API or by adding an
    * {@code <async-support>true</async-support>} element to servlet and filter declarations
    * in web.xml.
    *
    * @author Rossen Stoyanchev
    * @since 4.0
    * @see org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler
    */-->
    <async-supported>true</async-supported>
  </servlet>

  <servlet>
    <servlet-name>oauth2servlet</servlet-name>
    <servlet-class>com.benjamin.oauth2.authorization.servlet.AuthorizationServlet</servlet-class>
  </servlet>
  
  <servlet-mapping>
    <servlet-name>oauth2servlet</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>todos</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>

  <listener>
    <listener-class>com.benjamin.oauth2.OAuth2Initializer</listener-class>
  </listener>

  <filter>
    <filter-name>oauth2</filter-name>
    <filter-class>com.benjamin.oauth2.OAuthFilter</filter-class>
  </filter>

  <filter-mapping>
    <filter-name>oauth2</filter-name>
    <url-pattern>/oauth2/*</url-pattern>
  </filter-mapping>
  <filter>
    <filter-name>encoding</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
    <init-param>
      <param-name>forceEncoding</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>encoding</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
</web-app>